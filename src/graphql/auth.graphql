extend type User
    @auth(
        rules: [
            # Users must be authenticated
            { operations: [CREATE, UPDATE, DELETE, CONNECT, DISCONNECT], isAuthenticated: true }
            # For reading no authentication is required
            { operations: [READ], allowUnauthenticated: true }
        ]
    )

extend type Article
    @auth(
        rules: [
            # Users must be authenticated
            { operations: [CREATE, UPDATE, DELETE, CONNECT, DISCONNECT], isAuthenticated: true }
            # For reading no authentication is required
            { operations: [READ], allowUnauthenticated: true }
        ]
    )

extend type Category
    @auth(
        rules: [
            # Users must be authenticated
            { operations: [CREATE, UPDATE, DELETE, CONNECT, DISCONNECT], isAuthenticated: true }
            # For reading no authentication is required
            { operations: [READ], allowUnauthenticated: true }
        ]
    )

type Tag
    @auth(
        rules: [
            # Users must be authenticated
            { operations: [CREATE, UPDATE, DELETE, CONNECT, DISCONNECT], isAuthenticated: true }
            # For reading no authentication is required
            { operations: [READ], allowUnauthenticated: true }
        ]
    )
