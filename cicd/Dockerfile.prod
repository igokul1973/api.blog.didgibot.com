# Pull the Node.js from Docker Hub
FROM node:lts-bullseye

RUN apt-get update

# Install utils
RUN apt-get -y install apt-utils
RUN apt-get -y install build-essential gnupg2 ca-certificates lsb-release debian-archive-keyring net-tools

# Prepare nginx sources
RUN curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \
  | tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null

RUN gpg --dry-run --quiet --import --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg

RUN echo "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \
  https://nginx.org/packages/debian `lsb_release -cs` nginx" \
  | tee /etc/apt/sources.list.d/nginx.list

RUN apt-get update

# Install Nginx
RUN apt-get -y install nginx

EXPOSE 80

# Forward request logs to Docker log collector
RUN ln -sf /dev/stdout /var/log/nginx/access.log
RUN ln -sf /dev/stderr /var/log/nginx/error.log

# Create the app folder
ARG app_folder=/var/www/app
RUN mkdir -p $app_folder

# Move command execution context to the /www/data where
# the application will be located
WORKDIR $app_folder

# Copy project
COPY . .
RUN cp ./.env.dist ./.env

# Copy the entrypoint file
COPY ./cicd/start.sh /start.sh
RUN chmod +x /start.sh

ENTRYPOINT /start.sh

# Start node app
# CMD ["yarn", "node:dist"]
